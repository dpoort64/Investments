# -*- coding: utf-8 -*-
"""
Created on Sat Sep 30 22:21:21 2017

@author: dpoor
"""

import bs4 as bs
import datetime as dt
import os 
import pandas as pd
import pandas_datareader as web
import pickle
import requests

#Function to save the S&P 500 Ticker symbols
#Will only run this function once as we save it to a "picle" something or other
def save_sp500_tickers():
    resp = requests.get('https://en.wikipedia.org/wiki/List_of_S%26P_500_companies')
    soup = bs.BeautifulSoup(resp.text, 'lxml')
    table = soup.find('table', {'class':'wikitable sortable'})
    tickers = []
    
    for row in table.findAll('tr')[1:]:
        ticker = row.findAll('td')[0].text
        tickers.append(ticker)
        
    with open("sp500tickers.pickle", "wb") as f:
        pickle.dump(tickers, f)
    
    print(tickers)
    
    return tickers

#save_sp500_tickers()

 
# Get data from Yahoo for each company in S&P 500
# Probably want to start with only 10 or so just to make sure it is working
 
def get_data_from_yahoo(reload_sp500=False):
    if reload_sp500:
        tickers = save_sp500_tickers()
    else:
        with open("sp500tickers.pickle", "rb") as f:
            tickers = pickle.load(f)
     
    if not os.path.exists('stock_dfs'):
        os.makedirs('stock_dfs')
    
    start = dt.datetime(2010,1,1)
    end = dt.datetime(2017,9,30)
        
    for ticker in tickers:
        print(ticker)
        if not os.path.exists('stock_dfs/{}.csv'.format(ticker)):
            df = web.DataReader(ticker, 'yahoo', start, end)
            df.to_csv('stock_dfs/{}.csv'.format(ticker))
        else:
            print('Already have {}'.format(ticker))
            
get_data_from_yahoo()

'''
def compile_data():
    with open("sp500tickers.pickle", "rb") as f:
        tickers=pickle.load(f)
    
    main_df = pd.DataFrame()
    
    for count, ticker in enumerate(tickers):
        df = pd.read_csv('stock_sfs/{}.csv'.format(ticker))
        df.set_index('Date', inplace=True)
        
        df.rename(columns = {'Adj Close', ticker}, inplace=True)
        ##stopped here for now - need to look into straight web scraping as learning
        ##video #7, minutes or so in
        
            
            
    
    
    
''' 
     
        
        
        
        
        
        
 
    
    
